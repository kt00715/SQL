#Digital Media Store Analysis Project

#Schema: 
"CREATE TABLE albums
(
    [AlbumId] INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    [Title] NVARCHAR(160)  NOT NULL,
    [ArtistId] INTEGER  NOT NULL,
    FOREIGN KEY ([ArtistId]) REFERENCES ""artists"" ([ArtistId]) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)"

"CREATE TABLE artists
(
    [ArtistId] INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    [Name] NVARCHAR(120)
)"

"CREATE TABLE customers
(
    [CustomerId] INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    [FirstName] NVARCHAR(40)  NOT NULL,
    [LastName] NVARCHAR(20)  NOT NULL,
    [Company] NVARCHAR(80),
    [Address] NVARCHAR(70),
    [City] NVARCHAR(40),
    [State] NVARCHAR(40),
    [Country] NVARCHAR(40),
    [PostalCode] NVARCHAR(10),
    [Phone] NVARCHAR(24),
    [Fax] NVARCHAR(24),
    [Email] NVARCHAR(60)  NOT NULL,
    [SupportRepId] INTEGER,
    FOREIGN KEY ([SupportRepId]) REFERENCES ""employees"" ([EmployeeId]) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)"

"CREATE TABLE employees
(
    [EmployeeId] INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    [LastName] NVARCHAR(20)  NOT NULL,
    [FirstName] NVARCHAR(20)  NOT NULL,
    [Title] NVARCHAR(30),
    [ReportsTo] INTEGER,
    [BirthDate] DATETIME,
    [HireDate] DATETIME,
    [Address] NVARCHAR(70),
    [City] NVARCHAR(40),
    [State] NVARCHAR(40),
    [Country] NVARCHAR(40),
    [PostalCode] NVARCHAR(10),
    [Phone] NVARCHAR(24),
    [Fax] NVARCHAR(24),
    [Email] NVARCHAR(60),
    FOREIGN KEY ([ReportsTo]) REFERENCES ""employees"" ([EmployeeId]) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)"

"CREATE TABLE genres
(
    [GenreId] INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    [Name] NVARCHAR(120)
)"

"CREATE TABLE invoice_items
(
    [InvoiceLineId] INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    [InvoiceId] INTEGER  NOT NULL,
    [TrackId] INTEGER  NOT NULL,
    [UnitPrice] NUMERIC(10,2)  NOT NULL,
    [Quantity] INTEGER  NOT NULL,
    FOREIGN KEY ([InvoiceId]) REFERENCES ""invoices"" ([InvoiceId]) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY ([TrackId]) REFERENCES ""tracks"" ([TrackId]) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)"

"CREATE TABLE invoices
(
    [InvoiceId] INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    [CustomerId] INTEGER  NOT NULL,
    [InvoiceDate] DATETIME  NOT NULL,
    [BillingAddress] NVARCHAR(70),
    [BillingCity] NVARCHAR(40),
    [BillingState] NVARCHAR(40),
    [BillingCountry] NVARCHAR(40),
    [BillingPostalCode] NVARCHAR(10),
    [Total] NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY ([CustomerId]) REFERENCES ""customers"" ([CustomerId]) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)"

"CREATE TABLE media_types
(
    [MediaTypeId] INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    [Name] NVARCHAR(120)
)"

"CREATE TABLE playlist_track
(
    [PlaylistId] INTEGER  NOT NULL,
    [TrackId] INTEGER  NOT NULL,
    CONSTRAINT [PK_PlaylistTrack] PRIMARY KEY  ([PlaylistId], [TrackId]),
    FOREIGN KEY ([PlaylistId]) REFERENCES ""playlists"" ([PlaylistId]) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY ([TrackId]) REFERENCES ""tracks"" ([TrackId]) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)"

"CREATE TABLE playlists
(
    [PlaylistId] INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    [Name] NVARCHAR(120)
)"

"CREATE TABLE tracks
(
    [TrackId] INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    [Name] NVARCHAR(200)  NOT NULL,
    [AlbumId] INTEGER,
    [MediaTypeId] INTEGER  NOT NULL,
    [GenreId] INTEGER,
    [Composer] NVARCHAR(220),
    [Milliseconds] INTEGER  NOT NULL,
    [Bytes] INTEGER,
    [UnitPrice] NUMERIC(10,2)  NOT NULL,
    FOREIGN KEY ([AlbumId]) REFERENCES ""albums"" ([AlbumId]) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY ([GenreId]) REFERENCES ""genres"" ([GenreId]) 
		ON DELETE NO ACTION ON UPDATE NO ACTION,
    FOREIGN KEY ([MediaTypeId]) REFERENCES ""media_types"" ([MediaTypeId]) 
		ON DELETE NO ACTION ON UPDATE NO ACTION
)"

In this project, I used a data set named chinook to make my own queries and answer a set of questions about the store's artists, albums, tracks, invoices, and customers.

My Queries:

##A. Name each artist along with the name of their album(s).

SELECT artists.Name, albums.Title
FROM chinook.artists

LEFT JOIN chinook.albums
ON artists.ArtistId = albums.ArtistId;

##Result: 418 Artists and their albums are listed.

##B. What is the most popular genre in the entire tracks list?

SELECT COUNT(tracks.GenreId) AS genre_count, genres.Name
FROM chinook.tracks

LEFT JOIN chinook.genres
ON tracks.GenreId = genres.GenreId

GROUP BY genres.Name
ORDER BY genre_count desc;

##Result: Rock is the most popular genre in the tracks list.

##C. What country do most customers live in?

SELECT COUNT(customers.CustomerId) AS Customer_Count, customers.Country
FROM chinook.customers
GROUP BY customers.Country
ORDER BY Customer_Count desc;

##Result: Most customers live in the USA.

Questions:
